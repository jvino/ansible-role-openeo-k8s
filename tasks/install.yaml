---
- name: Create the openeo directory if it does not exist
  file:
    path: /etc/openeo
    state: directory
    mode: '0755'
    
- name: Create spark-jobs namespace
  kubernetes.core.k8s:
    name: spark-jobs
    api_version: v1
    kind: Namespace
    state: present
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Create spark-history namespace
  kubernetes.core.k8s:
    name: spark-history
    api_version: v1
    kind: Namespace
    state: present
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Deploy latest version of spark-operator chart
  kubernetes.core.helm:
    release_name: spark-operator
    chart_repo_url: "https://googlecloudplatform.github.io/spark-on-k8s-operator"
    chart_ref: spark-operator
    create_namespace: yes
    release_namespace: spark-operator
    values:
      sparkJobNamespace: spark-jobs
      webhook:
        enable: true
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Load layercatalogjson ConfigMap
  block:
  - copy:
      src: files/layercatalogjson.yaml
      dest: /etc/openeo/layercatalogjson.yaml
  - command: "kubectl apply -f /etc/openeo/layercatalogjson.yaml -n spark-jobs"
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

- name: Load sparkapplicationyaml ConfigMap
  block:
  - copy:
      src: files/sparkapplicationyaml.yaml
      dest: /etc/openeo/sparkapplicationyaml.yaml
  - command: "kubectl apply -f /etc/openeo/sparkapplicationyaml.yaml -n spark-jobs"
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

- name: Load http_credentials ConfigMap
  block:
  - copy:
      src: files/http_credentials.yaml
      dest: /etc/openeo/http_credentials.yaml
  - command: "kubectl apply -f /etc/openeo/http_credentials.yaml -n spark-jobs"
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

- name: Deploy MySpark Application
  block:
  - copy:
      src: files/values.yaml
      dest: /etc/openeo/values.yml
  - command: "{{ item }}"
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    with_items:
      - helm repo add sparkapp https://artifactory.vgt.vito.be/helm-charts
      - helm repo update
      - "helm install myspark sparkapp/sparkapplication --namespace spark-jobs \
          -f /etc/openeo/values.yml --version {{openeo_spark_application_version}}"
 # - kubernetes.core.helm:
 #   release_name: myspark
 #   chart_repo_url: "https://artifactory.vgt.vito.be/helm-charts"
 #   chart_ref: sparkapplication
 #   release_namespace: spark-jobs
 #   values_files: /etc/openeo/values.yml
 #   version: '{{ openeo_spark_application_version }}'
 # environment:
 #   KUBECONFIG: /etc/kubernetes/admin.conf

- name: Start Job-Tracker Pod
  block:
  - copy:
      src: files/jobtracker.yaml
      dest: /etc/openeo/jobtracker.yaml
  - command: "kubectl apply -f /etc/openeo/jobtracker.yaml -n spark-jobs"
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

- name: Load Ingress
  block:
  - template:
      src: templates/ingress.yaml
      dest: /etc/openeo/ingress.yml
  - command: kubectl apply -f /etc/openeo/ingress.yml -n spark-jobs 
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

- name: Deploy MySparkHistory Application
  block:
  - copy:
      src: files/shs_values.yaml
      dest: /etc/openeo/shs_values.yaml
  - command: "helm install mysparkhistory sparkapp/spark-history-server \
               -f /etc/openeo/shs_values.yaml --namespace spark-history --version {{openeo_spark_history_application_version}}"
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

- name: Load Spark History Ingress
  block:
  - template:
      src: template/shs_ingress.yaml
      dest: /etc/openeo/shs_ingress.yml
  - command: kubectl apply -f /etc/openeo/shs_ingress.yml -n spark-history
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf